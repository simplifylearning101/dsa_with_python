# Hour 4 Quiz: 30 Questions

Covers Hour 4 and some Hour 1-3 concepts.

1. What is a list in Python?  
2. How to add item to list?  
3. True or False: Tuples are mutable.  
4. Write code to create a set with 3 numbers.  
5. What does `dict.get(key)` do?  
6. Output of `["a", "b"][1]`?  
7. Create tuple with 2 strings. (Code)  
8. Why use sets for unique items?  
9. How to remove item from list?  
10. What is a dictionary key?  
11. Print keys of dict={"a": 1, "b": 2}. (Code)  
12. Output of `{1, 1, 2}`?  
13. Why are tuples immutable?  
14. Add item to set. (Code)  
15. What does `len()` return for lists?  
16. Check if key exists in dict. (Code)  
17. What happens if you access dict["missing"]?  
18. Merge two sets. (Code)  
19. Output of `(1, 2)[0]`?  
20. Why choose dict for key-value data?  
21. Remove last item from list. (Code)  
22. What is negative indexing?  
23. Convert list to tuple. (Code)  
24. Output of `3 in {1, 2, 3}`?  
25. Why explain data structure choice in interviews?  
26. Create dict with 2 pairs. (Code)  
27. Common error with sets?  
28. Iterate over list with for loop. (Code)  
29. What does `pop()` return for lists?  
30. Why use lists over tuples?

## Solutions for the Quiz
1. Ordered, mutable collection.  
2. `list.append(item)` or `list.insert(index, item)`.  
3. False.  
4. `s = {1, 2, 3}`  
5. Returns value for key or None if missing.  
6. "b"  
7. `t = ("cat", "dog")`  
8. Automatically removes duplicates, fast lookup.  
9. `list.remove(item)` or `list.pop(index)`  
10. Unique identifier for value.  
11. `d = {"a": 1, "b": 2}; for k in d: print(k)`  
12. {1, 2}  
13. For fixed, unchangeable data.  
14. `s = {1, 2}; s.add(3)`  
15. Number of items.  
16. `key in dict`  
17. KeyError.  
18. `s1 | s2`  
19. 1  
20. Fast key-based lookup.  
21. `list.pop()`  
22. Access from end, e.g., `list[-1]`.  
23. `t = tuple([1, 2])`  
24. True  
25. Shows problem-solving clarity.  
26. `d = {"name": "Alice", "age": 20}`  
27. Adding unhashable items (e.g., lists).  
28. `for x in ["a", "b"]: print(x)`  
29. Removed item.  
30. Lists are mutable, flexible.