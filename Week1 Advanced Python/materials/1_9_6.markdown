# Week 1, Hour 9 LeetCode/NeetCode-Style Problems

Practice these to apply advanced data structures.

1. **Character Frequency**  
   **Problem**: Count frequency of characters in a string.  
   **Outcome**: Dictionary of frequencies.  
   **Example**: s="hello" → {'h': 1, 'e': 1, 'l': 2, 'o': 1}

2. **Sliding Window Maximum**  
   **Problem**: Find max in each k-sized window.  
   **Outcome**: List of max values.  
   **Example**: nums=[1,3,-1,-3,5,3,6,7], k=3 → [3,3,5,5,6,7]

3. **Group Anagrams**  
   **Problem**: Group anagrams using `defaultdict`.  
   **Outcome**: List of grouped anagrams.  
   **Example**: strs=["eat","tea","tan","ate","nat","bat"] → [["eat","tea","ate"],["tan","nat"],["bat"]]

4. **LRU Cache**  
   **Problem**: Implement LRU cache using `OrderedDict`.  
   **Outcome**: Cache with get/put operations.  
   **Example**: capacity=2, put(1,1), put(2,2), get(1), put(3,3) → get(2)=-1

5. **Min Heap Push/Pop**  
   **Problem**: Implement min heap push and pop.  
   **Outcome**: Min value after operations.  
   **Example**: Push 3, 1, 2; Pop → 1