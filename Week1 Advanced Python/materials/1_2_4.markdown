# Week 1, Hour 2 Quiz: 30 Questions

Covers Hour 2 and some Week 0/Hour 1 concepts.

1. What does `dict.items()` return?  
2. Purpose of `setdefault()`?  
3. Write code to count list items using dict. (Code)  
4. Output of `{1, 2} | {2, 3}`?  
5. What is `Counter` used for?  
6. True or False: Sets allow duplicates.  
7. Merge two dicts. (Code)  
8. What is a hashable type?  
9. Find difference of {1, 2, 3} - {2}. (Code)  
10. Why use dict for frequency counting?  
11. Output of `Counter("aba")`?  
12. Common error with dict iteration?  
13. Create nested dict for grades. (Code)  
14. What does `keys()` return?  
15. True or False: Dicts are unordered.  
16. Use `defaultdict` for counting. (Code)  
17. Why explain dict choice in interviews?  
18. Check if key exists in dict. (Code)  
19. Output of `{1, 2, 3} & {2, 3, 4}`?  
20. Why use sets for unique elements?  
21. Update dict value. (Code)  
22. What is symmetric difference?  
23. Count chars in "hello". (Code)  
24. Why test empty dicts/sets?  
25. Output of `dict.get("x", 0)` if key missing?  
26. Create set from list. (Code)  
27. Why avoid unhashable keys?  
28. Find common items in lists using sets. (Code)  
29. Output of `len({"a": 1, "b": 2})`?  
30. When to use `Counter` vs dict?

## Solutions for the Quiz
1. Key-value pairs as tuples.  
2. Gets value or sets default if key missing.  
3. `d = {}; for x in lst: d[x] = d.get(x, 0) + 1`  
4. {1, 2, 3}  
5. Counts item frequencies.  
6. False  
7. `d1.update(d2)`  
8. Type usable as dict key/set element (e.g., int, str).  
9. `{1, 2, 3} - {2}` â†’ {1, 3}  
10. O(1) lookup, easy updates.  
11. Counter({'a': 2, 'b': 1})  
12. Modifying during iteration.  
13. `d = {"Alice": {"math": 90}}`  
14. Dictionary keys.  
15. False (ordered since Python 3.7).  
16. `from collections import defaultdict; d = defaultdict(int); d[x] += 1`  
17. Shows problem-solving clarity.  
18. `key in dict` or `dict.get(key)`  
19. {2, 3}  
20. Fast membership, deduplication.  
21. `d["key"] = value`  
22. Elements in either set but not both.  
23. `Counter("hello")`  
24. Common edge case.  
25. 0  
26. `set([1, 2, 3])`  
27. Causes TypeError.  
28. `list(set(list1) & set(list2))`  
29. 2  
30. `Counter` for quick frequency counting, dict for flexibility.